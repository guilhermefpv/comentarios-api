variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:dind

stages:
  - test
  - trivy file scan
  - build
  - trivy image scan
  - deploy

sast:
  stage: test


trivy-file-scan:
  stage: trivy file scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs . 

docker-build:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: build
  script:
    # - aws --version
    # - docker --version
    - echo Login AWS ${AWS_DEFAULT_REGION} ${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest 
    - aws ecr get-login-password --region "${AWS_DEFAULT_REGION}" | docker login --username AWS --password-stdin "$CI_AWS_ECR_REPOSITORY_URL"
    - echo "Building image for ${CI_COMMIT_TAG}"
    - docker build -t ${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest .
    - echo "Pushing image..."
    # - docker push ${CI_AWS_ECR_REPOSITORY_URL}:${CI_COMMIT_TAG}
    - docker push ${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest
  only:
    - dev

scan-image:
  stage: trivy image scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - echo ${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest
    - trivy image ${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest

deploy-aws-fargate:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  script:
    - echo ${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$CI_AWS_ECS_TASK_DEFINITION" --region "${AWS_DEFAULT_REGION}")
    - echo ${TASK_DEFINITION}
    - NEW_CONTAINER_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "${CI_AWS_ECR_REPOSITORY_URL}/comentarios-api:latest" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..." ${NEW_CONTAINER_DEFINTIION}
    ## melhorar isso com depois atualizando a image-tag com uma nova revisao de task-definition
    # - aws ecs register-task-definition --region "${AWS_DEFAULT_REGION}" --family "${CI_AWS_ECS_TASK_DEFINITION}" --container-definitions "${NEW_CONTAINER_DEFINTIION}"
    # - aws ecs register-task-definition --region "${AWS_DEFAULT_REGION}" --family "${CI_AWS_ECS_TASK_DEFINITION}" --cli-input-json "${CI_AWS_ECS_TASK_DEFINITION_FILE}" --container-definitions "${NEW_CONTAINER_DEFINTIION}"
    - echo "Updating the service..."
    # - aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "${CI_AWS_ECS_CLUSTER}" --service "${CI_AWS_ECS_SERVICE}"  --task-definition "${CI_AWS_ECS_TASK_DEFINITION}"
    - aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "${CI_AWS_ECS_CLUSTER}" --service "${CI_AWS_ECS_SERVICE}" --force-new-deployment
  only:
    - dev
  dependencies:
    - "docker-build"
  
include:
- template: Security/SAST.gitlab-ci.yml
#   - template: AWS/Deploy-ECS.gitlab-ci.yml

# CI_AWS_ECS_CLUSTER
# CI_AWS_ECS_SERVICE
# CI_AWS_ECR_REPOSITORY_URL
# CI_AWS_ECS_TASK_DEFINITION